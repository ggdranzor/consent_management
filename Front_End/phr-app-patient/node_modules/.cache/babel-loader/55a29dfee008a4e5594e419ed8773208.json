{"ast":null,"code":"var _jsxFileName = \"/home/philips/fabric/phr-app/src/components/ProviderDashboard.js\";\nimport React from \"react\";\nimport Img from 'react-image';\nimport { Icon } from 'react-icons-kit';\nimport { edit } from 'react-icons-kit/feather/edit';\nimport { plus } from 'react-icons-kit/ikons';\nimport { check } from 'react-icons-kit/feather/check';\nimport { x } from 'react-icons-kit/feather/x';\nimport { Button, ButtonGroup, ButtonToolbar } from 'reactstrap';\nconst patientUploads = [];\nvar param = null;\nconst blockdata = [];\n\nconst TableRow4 = ({\n  SrNo,\n  blockNumber,\n  prevHash,\n  currentHash\n}) => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, SrNo), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, blockNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, prevHash), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, currentHash));\n};\n\nexport default class ProviderDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      reqResponse: {}\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.putblockdata = this.putblockdata.bind(this);\n  }\n\n  putblockdata() {\n    fetch('http://130.147.175.222:8099/chaindashboard?' + \"\".concat(param), {\n      method: 'get'\n    }).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        return res.json();\n      } else {\n        console.log('sometihng went wrong');\n      }\n    }).then(function (json) {\n      var count = 1;\n\n      for (var i in json) {\n        let blocks = {\n          srno: count,\n          block: json[i]\n        };\n        blockdata.push(blocks);\n        count = count + 1;\n      }\n\n      console.log(blockdata);\n    });\n  }\n\n  handleRequest(PatientID, Category, CategoryID) {\n    console.log('The button was clicked. ');\n    var reqCounter = 'REQ' + this.state.counter;\n    var reqPayload = {\n      \"reqID\": reqCounter,\n      \"proID\": username,\n      \"patID\": PatientID,\n      \"category\": Category,\n      \"categoryID\": CategoryID\n    };\n    fetch('http://130.147.175.222:8099/request', {\n      method: 'post',\n      body: JSON.stringify(reqPayload),\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        return res.json();\n      } else {\n        console.log('sometihng went wrong');\n      }\n    }).then(data => {\n      this.setState({\n        reqResponse: data\n      });\n      console.log(this.state.reqResponse);\n    }).catch(err => err);\n    console.log(reqPayload);\n    var updatedCounter = this.state.counter + 1;\n    this.setState({\n      counter: updatedCounter\n    });\n    console.log(this.state);\n  }\n\n  componentWillMount() {\n    fetch('http://130.147.175.222:8099/querydb', {\n      method: 'get'\n    }).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        return res.json();\n      } else {\n        console.log('sometihng went wrong');\n      }\n    }).then(function (json) {\n      var count = 1;\n\n      for (var i in json) {\n        for (var j in json[i].data) {\n          if (json[i].category == 'Medication') {\n            let patreq = {\n              id: count,\n              category: json[i].category,\n              patID: json[i].data[j].PatientID,\n              categoryID: 'MED' + json[i].data[j].MedID\n            };\n            patientUploads.push(patreq);\n          } else if (json[i].category == 'History') {\n            let patreq = {\n              id: count,\n              category: json[i].category,\n              patID: json[i].data[j].PatientID,\n              categoryID: 'HIST' + json[i].data[j].HistID\n            };\n            patientUploads.push(patreq);\n          } else {\n            let patreq = {\n              id: count,\n              category: json[i].category,\n              patID: json[i].data[j].PatientID,\n              categoryID: 'LIFE' + json[i].data[j].LifeID\n            };\n            patientUploads.push(patreq);\n          }\n\n          count = count + 1;\n        }\n      }\n\n      console.log(patientUploads);\n    });\n    this.putblockdata();\n  }\n\n  render() {\n    console.log(this.state.requestID);\n    console.log(\"Upload Data\");\n\n    const TableRow = ({\n      SrNo,\n      PatientID,\n      Category,\n      CategoryID\n    }) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, SrNo), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, PatientID), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, Category), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, CategoryID), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.handleRequest(PatientID, Category, CategoryID),\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: '18',\n        icon: plus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })))));\n    };\n\n    return React.createElement(\"div\", {\n      class: \"well well-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel panel-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Patients List\")), React.createElement(\"div\", {\n      class: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"PatientID\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"CategoryID\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, patientUploads.map(upload => {\n      return React.createElement(TableRow, {\n        key: upload.id,\n        SrNo: upload.id,\n        PatientID: upload.patID,\n        Category: upload.category,\n        CategoryID: upload.categoryID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      });\n    })))))), React.createElement(\"div\", {\n      class: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" BLOCKS\"), React.createElement(\"div\", {\n      class: \"panel panel-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      style: {\n        fontSize: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Block Number\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Previous Hash\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Current Hash\"))), React.createElement(\"tbody\", {\n      style: {\n        'wordBreak': 'break-all'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, blockdata.map(upload => {\n      return React.createElement(TableRow4, {\n        key: upload.srno,\n        SrNo: upload.srno,\n        blockNumber: upload.block.blockNumber,\n        prevHash: upload.block.prevHash,\n        currentHash: upload.block.dataHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      });\n    })))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/philips/fabric/phr-app/src/components/ProviderDashboard.js"],"names":["React","Img","Icon","edit","plus","check","x","Button","ButtonGroup","ButtonToolbar","patientUploads","param","blockdata","TableRow4","SrNo","blockNumber","prevHash","currentHash","ProviderDashboard","Component","constructor","props","state","counter","reqResponse","handleRequest","bind","componentWillMount","putblockdata","fetch","method","then","res","status","json","console","log","count","i","blocks","srno","block","push","PatientID","Category","CategoryID","reqCounter","reqPayload","username","body","JSON","stringify","headers","data","setState","catch","err","updatedCounter","j","category","patreq","id","patID","categoryID","MedID","HistID","LifeID","render","requestID","TableRow","map","upload","fontSize","dataHash"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Img from 'react-image';\nimport { Icon } from 'react-icons-kit';\nimport {edit} from 'react-icons-kit/feather/edit';\nimport {plus} from 'react-icons-kit/ikons';\nimport {check} from 'react-icons-kit/feather/check'\nimport {x} from 'react-icons-kit/feather/x'\nimport { Button, ButtonGroup, ButtonToolbar } from 'reactstrap'\n\nconst patientUploads = [];\nvar param=null;\nconst blockdata =[];\nconst TableRow4 = ({ SrNo, blockNumber, prevHash, currentHash}) => {\n  return (\n    <tr>\n      <td>{SrNo}</td>\n      <td>{blockNumber}</td>\n      <td>{prevHash}</td>\n      <td>{currentHash}</td>\n    </tr>\n  );\n}\n\nexport default class ProviderDashboard extends React.Component {\n  constructor (props){\n    super(props);\n    this.state={\n      counter:0,\n      reqResponse:{},\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.putblockdata = this.putblockdata.bind(this);\n}\n\nputblockdata(){\n  fetch('http://130.147.175.222:8099/chaindashboard?'+`${param}`,{\n   method: 'get'\n }).then(res =>{if (res.status>=200 && res.status<300) {\n   return res.json();\n}\nelse {\n console.log('sometihng went wrong');\n    }\n  }).then(function (json){\n    var count = 1;\n    for (var i in json){\n      let blocks={\n        srno:count,\n        block:json[i]\n      };\n      blockdata.push(blocks);\n      count = count +1;\n    }\n    console.log(blockdata)\n  });\n}\n\n  handleRequest(PatientID, Category,CategoryID) {\n    console.log('The button was clicked. ');\n    var reqCounter = 'REQ'+this.state.counter;\n    var reqPayload = {\n      \"reqID\": reqCounter,\n      \"proID\": username,\n      \"patID\": PatientID,\n      \"category\": Category,\n      \"categoryID\":CategoryID\n    };\n\n     fetch('http://130.147.175.222:8099/request',{\n       method: 'post',\n       body : JSON.stringify(reqPayload),\n       headers: {'Content-Type':'application/json','Access-Control-Allow-Origin':'*'}\n     }).then(res =>{if (res.status>=200 && res.status<300) {\n       return res.json();\n     }\n   else {\n     console.log('sometihng went wrong');\n        }\n      }).then(data =>{\n        this.setState({reqResponse:data});\n        console.log(this.state.reqResponse);\n      }).catch(err => err);\n    console.log(reqPayload);\n    var updatedCounter = this.state.counter + 1;\n    this.setState({counter:updatedCounter});\n    console.log(this.state);\n  }\n\n  componentWillMount(){\n    fetch('http://130.147.175.222:8099/querydb',{\n     method: 'get'\n   }).then(res =>{\n        if (res.status>=200 && res.status<300) {\n            return res.json();\n          }\n        else {\n            console.log('sometihng went wrong');\n        }\n    }).then(function (json){\n      var count=1;\n      for(var i in json){\n        for(var j in json[i].data){\n          if(json[i].category=='Medication'){\n            let patreq={\n              id:count,\n              category:json[i].category,\n              patID:json[i].data[j].PatientID,\n              categoryID:'MED'+json[i].data[j].MedID\n             };\n             patientUploads.push(patreq);\n          }\n          else if (json[i].category=='History'){\n            let patreq={\n              id:count,\n              category:json[i].category,\n              patID:json[i].data[j].PatientID,\n              categoryID:'HIST'+json[i].data[j].HistID\n            };\n            patientUploads.push(patreq);\n          }\n          else {\n              let patreq={\n                id:count,\n                category:json[i].category,\n                patID:json[i].data[j].PatientID,\n                categoryID:'LIFE'+json[i].data[j].LifeID\n              };\n              patientUploads.push(patreq);\n            }\n            count = count +1;\n          }\n        }\n          console.log(patientUploads);\n        }\n    );\n\n    this.putblockdata();\n  }\n\n  render() {\n    console.log(this.state.requestID);\n    console.log(\"Upload Data\");\n\n    const TableRow = ({ SrNo, PatientID, Category, CategoryID}) => {\n        return (\n          <tr>\n            <td>{SrNo}</td>\n            <td>{PatientID}</td>\n            <td>{Category}</td>\n            <td>{CategoryID}</td>\n            <td>\n            <ButtonToolbar>\n              <button type=\"button\" onClick={()=>this.handleRequest(PatientID, Category,CategoryID)} class=\"btn btn-primary\"><Icon size={'18'} icon={plus}/></button>\n            </ButtonToolbar>\n            </td>\n          </tr>\n        );\n      }\n\n    return (\n        <div class=\"well well-lg\">\n           <div class =\"panel panel-primary\">\n                  <div class=\"panel-heading\">\n                    <b>Patients List</b>\n                  </div>\n                  <div class=\"panel-body\">\n                    <div class=\"table-hover\">\n                      <table class =\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">PatientID</th>\n                            <th scope=\"col\">Category</th>\n                            <th scope=\"col\">CategoryID</th>\n                            <th scope=\"col\">Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                         {\n                           patientUploads.map((upload) => {\n                             return (\n                                 <TableRow\n                                   key={upload.id}\n                                   SrNo={upload.id}\n                                   PatientID={upload.patID}\n                                   Category={upload.category}\n                                   CategoryID={upload.categoryID}\n                                 />\n                             );\n                           })\n                         }\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n            </div>\n            <div class =\"col-12\">\n    <div class =\"row-1\">\n        <div class=\"panel-heading\"> BLOCKS</div>\n           <div class =\"panel panel-primary\">\n          <div class=\"panel-body\">\n           <div class=\"table-hover\">\n            <table class =\"table\" style={{fontSize:'15px'}}>\n            <thead>\n           <tr>\n           <th scope=\"col\">#</th>\n           <th scope=\"col\">Block Number</th>\n           <th scope=\"col\">Previous Hash</th>\n           <th scope=\"col\">Current Hash</th>\n           </tr>\n           </thead>\n           <tbody style={{'wordBreak': 'break-all'}}>\n            {\n               blockdata.map((upload) => {\n                 return (\n                     <TableRow4\n                       key={upload.srno}\n                       SrNo={upload.srno}\n                       blockNumber={upload.block.blockNumber}\n                       prevHash={upload.block.prevHash}\n                       currentHash={upload.block.dataHash}\n                     />\n                 );\n               })\n             }\n\n           </tbody>\n           </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}