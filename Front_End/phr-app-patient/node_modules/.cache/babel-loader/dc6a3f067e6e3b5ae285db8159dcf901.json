{"ast":null,"code":"var _jsxFileName = \"/home/philips/fabric/phr-app/src/components/ProviderDashboard.js\";\nimport React from \"react\";\nimport { Icon } from 'react-icons-kit';\nimport { plus } from 'react-icons-kit/ikons';\nimport { withAuth } from '@okta/okta-react';\nimport { ButtonToolbar } from 'reactstrap';\nimport ProfileBar from \"./layouts/ProfileBar\";\nconst patientUploads = [];\nvar param = null;\nvar username = null;\nconst blockdata = [];\n\nconst TableRow4 = ({\n  SrNo,\n  blockNumber,\n  prevHash,\n  currentHash\n}) => {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, SrNo), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, blockNumber), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, prevHash), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, currentHash));\n};\n\nexport default withAuth(class ProviderDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      reqResponse: {}\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.putblockdata = this.putblockdata.bind(this);\n  }\n\n  putblockdata() {\n    fetch('http://130.147.175.222:8099/chaindashboard?' + \"\".concat(param), {\n      method: 'get'\n    }).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        return res.json();\n      } else {\n        console.log('sometihng went wrong');\n      }\n    }).then(function (json) {\n      var count = 1;\n\n      for (var i in json) {\n        let blocks = {\n          srno: count,\n          block: json[i]\n        };\n        blockdata.push(blocks);\n        count = count + 1;\n      }\n\n      console.log(blockdata);\n    });\n  }\n\n  handleRequest(PatientID, Category, CategoryID) {\n    console.log('The button was clicked. ');\n    var reqCounter = 'REQ' + this.state.counter;\n    var reqPayload = {\n      \"reqID\": reqCounter,\n      \"proID\": username,\n      \"patID\": PatientID,\n      \"category\": Category,\n      \"categoryID\": CategoryID\n    };\n    fetch('http://130.147.175.222:8099/request', {\n      method: 'post',\n      body: JSON.stringify(reqPayload),\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        return res.json();\n      } else {\n        console.log('sometihng went wrong');\n      }\n    }).then(data => {\n      this.setState({\n        reqResponse: data\n      });\n      console.log(this.state.reqResponse);\n    }).catch(err => err);\n    console.log(reqPayload);\n    var updatedCounter = this.state.counter + 1;\n    this.setState({\n      counter: updatedCounter\n    });\n    console.log(this.state);\n  }\n\n  componentWillMount() {\n    blockdata.length = 0;\n    patientUploads.length = 0;\n    this.props.auth.getUser().then(res => {\n      console.log(res);\n      username = res.preferred_username;\n      console.log(username);\n      param = \"patID=\" + username;\n    }).then(() => {\n      fetch('http://130.147.175.222:8099/querydb', {\n        method: 'get'\n      }).then(res => {\n        if (res.status >= 200 && res.status < 300) {\n          return res.json();\n        } else {\n          console.log('sometihng went wrong');\n        }\n      }).then(function (json) {\n        var count = 1;\n\n        for (var i in json) {\n          for (var j in json[i].data) {\n            if (json[i].category == 'Medication') {\n              let patreq = {\n                id: count,\n                category: json[i].category,\n                patID: json[i].data[j].PatientID,\n                categoryID: 'MED' + json[i].data[j].MedID\n              };\n              patientUploads.push(patreq);\n            } else if (json[i].category == 'History') {\n              let patreq = {\n                id: count,\n                category: json[i].category,\n                patID: json[i].data[j].PatientID,\n                categoryID: 'HIST' + json[i].data[j].HistID\n              };\n              patientUploads.push(patreq);\n            } else {\n              let patreq = {\n                id: count,\n                category: json[i].category,\n                patID: json[i].data[j].PatientID,\n                categoryID: 'LIFE' + json[i].data[j].LifeID\n              };\n              patientUploads.push(patreq);\n            }\n\n            count = count + 1;\n          }\n        }\n\n        console.log(patientUploads);\n      });\n      this.putblockdata();\n    });\n  }\n\n  render() {\n    console.log(this.state.requestID);\n    console.log(\"Upload Data\");\n\n    const TableRow = ({\n      SrNo,\n      PatientID,\n      Category,\n      CategoryID\n    }) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, SrNo), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, PatientID), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, Category), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, CategoryID), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.handleRequest(PatientID, Category, CategoryID),\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        size: '18',\n        icon: plus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })))));\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(ProfileBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"well well-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel panel-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Patients List\")), React.createElement(\"div\", {\n      class: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"PatientID\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"CategoryID\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, patientUploads.map(upload => {\n      return React.createElement(TableRow, {\n        key: upload.id,\n        SrNo: upload.id,\n        PatientID: upload.patID,\n        Category: upload.category,\n        CategoryID: upload.categoryID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      });\n    })))))), React.createElement(\"div\", {\n      class: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \" BLOCKS\"), React.createElement(\"div\", {\n      class: \"panel panel-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      class: \"table\",\n      style: {\n        fontSize: '15px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Block Number\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Previous Hash\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Current Hash\"))), React.createElement(\"tbody\", {\n      style: {\n        'wordBreak': 'break-all'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, blockdata.map(upload => {\n      return React.createElement(TableRow4, {\n        key: upload.srno,\n        SrNo: upload.srno,\n        blockNumber: upload.block.blockNumber,\n        prevHash: upload.block.prevHash,\n        currentHash: upload.block.dataHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      });\n    }))))))))));\n  }\n\n});","map":{"version":3,"sources":["/home/philips/fabric/phr-app/src/components/ProviderDashboard.js"],"names":["React","Icon","plus","withAuth","ButtonToolbar","ProfileBar","patientUploads","param","username","blockdata","TableRow4","SrNo","blockNumber","prevHash","currentHash","ProviderDashboard","Component","constructor","props","state","counter","reqResponse","handleRequest","bind","componentWillMount","putblockdata","fetch","method","then","res","status","json","console","log","count","i","blocks","srno","block","push","PatientID","Category","CategoryID","reqCounter","reqPayload","body","JSON","stringify","headers","data","setState","catch","err","updatedCounter","length","auth","getUser","preferred_username","j","category","patreq","id","patID","categoryID","MedID","HistID","LifeID","render","requestID","TableRow","map","upload","fontSize","dataHash"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Icon } from 'react-icons-kit';\nimport {plus} from 'react-icons-kit/ikons';\nimport { withAuth } from '@okta/okta-react';\nimport { ButtonToolbar } from 'reactstrap';\nimport ProfileBar from \"./layouts/ProfileBar\";\n\nconst patientUploads = [];\nvar param=null;\nvar username=null;\nconst blockdata =[];\nconst TableRow4 = ({ SrNo, blockNumber, prevHash, currentHash}) => {\n  return (\n    <tr>\n      <td>{SrNo}</td>\n      <td>{blockNumber}</td>\n      <td>{prevHash}</td>\n      <td>{currentHash}</td>\n    </tr>\n  );\n}\n\nexport default withAuth(class ProviderDashboard extends React.Component {\n  constructor (props){\n    super(props);\n    this.state={\n      counter:0,\n      reqResponse:{},\n    };\n    this.handleRequest = this.handleRequest.bind(this);\n    this.componentWillMount = this.componentWillMount.bind(this);\n    this.putblockdata = this.putblockdata.bind(this);\n}\n\nputblockdata(){\n  fetch('http://130.147.175.222:8099/chaindashboard?'+`${param}`,{\n   method: 'get'\n }).then(res =>{if (res.status>=200 && res.status<300) {\n   return res.json();\n}\nelse {\n console.log('sometihng went wrong');\n    }\n  }).then(function (json){\n    var count = 1;\n    for (var i in json){\n      let blocks={\n        srno:count,\n        block:json[i]\n      };\n      blockdata.push(blocks);\n      count = count +1;\n    }\n    console.log(blockdata)\n  });\n}\n\n  handleRequest(PatientID, Category,CategoryID) {\n    console.log('The button was clicked. ');\n    var reqCounter = 'REQ'+this.state.counter;\n    var reqPayload = {\n      \"reqID\": reqCounter,\n      \"proID\": username,\n      \"patID\": PatientID,\n      \"category\": Category,\n      \"categoryID\":CategoryID\n    };\n\n     fetch('http://130.147.175.222:8099/request',{\n       method: 'post',\n       body : JSON.stringify(reqPayload),\n       headers: {'Content-Type':'application/json','Access-Control-Allow-Origin':'*'}\n     }).then(res =>{if (res.status>=200 && res.status<300) {\n       return res.json();\n     }\n   else {\n     console.log('sometihng went wrong');\n        }\n      }).then(data =>{\n        this.setState({reqResponse:data});\n        console.log(this.state.reqResponse);\n      }).catch(err => err);\n    console.log(reqPayload);\n    var updatedCounter = this.state.counter + 1;\n    this.setState({counter:updatedCounter});\n    console.log(this.state);\n  }\n\n  componentWillMount(){\n    blockdata.length=0;\n    patientUploads.length=0;\n    this.props.auth.getUser().then(res =>{\n        console.log(res);\n        username = res.preferred_username;\n        console.log(username);\n        param=\"patID=\"+username;       \n      }).then(()=>{\n            fetch('http://130.147.175.222:8099/querydb',{\n            method: 'get'\n            }).then(res =>{\n                if (res.status>=200 && res.status<300) {\n                    return res.json();\n                }\n                else {\n                    console.log('sometihng went wrong');\n                }\n            }).then(function (json){\n            var count=1;\n            for(var i in json){\n                for(var j in json[i].data){\n                if(json[i].category=='Medication'){\n                    let patreq={\n                    id:count,\n                    category:json[i].category,\n                    patID:json[i].data[j].PatientID,\n                    categoryID:'MED'+json[i].data[j].MedID\n                    };\n                    patientUploads.push(patreq);\n                }\n                else if (json[i].category=='History'){\n                    let patreq={\n                    id:count,\n                    category:json[i].category,\n                    patID:json[i].data[j].PatientID,\n                    categoryID:'HIST'+json[i].data[j].HistID\n                    };\n                    patientUploads.push(patreq);\n                }\n                else {\n                    let patreq={\n                        id:count,\n                        category:json[i].category,\n                        patID:json[i].data[j].PatientID,\n                        categoryID:'LIFE'+json[i].data[j].LifeID\n                    };\n                    patientUploads.push(patreq);\n                    }\n                    count = count +1;\n                }\n                }\n                console.log(patientUploads);\n                }\n    );\n    this.putblockdata();\n  });\n}\n  render() {\n    console.log(this.state.requestID);\n    console.log(\"Upload Data\");\n\n    const TableRow = ({ SrNo, PatientID, Category, CategoryID}) => {\n        return (\n          <tr>\n            <td>{SrNo}</td>\n            <td>{PatientID}</td>\n            <td>{Category}</td>\n            <td>{CategoryID}</td>\n            <td>\n            <ButtonToolbar>\n              <button type=\"button\" onClick={()=>this.handleRequest(PatientID, Category,CategoryID)} class=\"btn btn-primary\"><Icon size={'18'} icon={plus}/></button>\n            </ButtonToolbar>\n            </td>\n          </tr>\n        );\n      }\n\n    return (\n        <div>\n        <div>\n          <ProfileBar />\n          <Nav />\n        </div>\n        <div class=\"well well-lg\">\n           <div class =\"panel panel-primary\">\n                  <div class=\"panel-heading\">\n                    <b>Patients List</b>\n                  </div>\n                  <div class=\"panel-body\">\n                    <div class=\"table-hover\">\n                      <table class =\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">PatientID</th>\n                            <th scope=\"col\">Category</th>\n                            <th scope=\"col\">CategoryID</th>\n                            <th scope=\"col\">Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                         {\n                           patientUploads.map((upload) => {\n                             return (\n                                 <TableRow\n                                   key={upload.id}\n                                   SrNo={upload.id}\n                                   PatientID={upload.patID}\n                                   Category={upload.category}\n                                   CategoryID={upload.categoryID}\n                                 />\n                             );\n                           })\n                         }\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n            </div>\n            <div class =\"col-12\">\n    <div class =\"row-1\">\n        <div class=\"panel-heading\"> BLOCKS</div>\n           <div class =\"panel panel-primary\">\n          <div class=\"panel-body\">\n           <div class=\"table-hover\">\n            <table class =\"table\" style={{fontSize:'15px'}}>\n            <thead>\n           <tr>\n           <th scope=\"col\">#</th>\n           <th scope=\"col\">Block Number</th>\n           <th scope=\"col\">Previous Hash</th>\n           <th scope=\"col\">Current Hash</th>\n           </tr>\n           </thead>\n           <tbody style={{'wordBreak': 'break-all'}}>\n            {\n               blockdata.map((upload) => {\n                 return (\n                     <TableRow4\n                       key={upload.srno}\n                       SrNo={upload.srno}\n                       blockNumber={upload.block.blockNumber}\n                       prevHash={upload.block.prevHash}\n                       currentHash={upload.block.dataHash}\n                     />\n                 );\n               })\n             }\n\n           </tbody>\n           </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n});\n"]},"metadata":{},"sourceType":"module"}